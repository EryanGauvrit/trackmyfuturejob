generator client {
    provider = "prisma-client-js"
    previewFeatures = ["prismaSchemaFolder"]    
    output = "./../generated/prisma"
    binaryTargets = ["native", "debian-openssl-3.0.x", "rhel-openssl-3.0.x", "linux-musl"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id               String    @id @default(uuid())
    name             String
    email            String
    emailVerified    Boolean   @default(false)
    image            String?
    createdAt        DateTime  @default(now())
    updatedAt        DateTime  @updatedAt
    twoFactorEnabled Boolean   @default(false)
    Session          Session[]
    Account          Account[]

    applications     Application[]
    interviews       Interview[]

    @@unique([email])
    @@map("user")
}

model Session {
    id        String   @id @default(uuid())
    expiresAt DateTime
    token     String   @unique
    ipAddress String?
    userAgent String?
    userId    String
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("session")
}

model Account {
    id           String     @id @default(uuid())
    accountId    String     @db.Text
    providerId   String     @db.Text
    userId       String
    user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
    accessToken  String?    @db.Text
    refreshToken String?    @db.Text
    idToken      String?    @db.Text
    expiresAt    DateTime?
    password     String?
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt

    accessTokenExpiresAt  DateTime?
    refreshTokenExpiresAt DateTime?
    scope                 String?  @db.Text

    @@map("account")
}

model Verification {
    id         String       @id @default(uuid())
    identifier String       @db.Text
    value      String       @db.Text
    expiresAt  DateTime
    createdAt  DateTime? @default(now())
    updatedAt  DateTime? @updatedAt

    @@map("verification")
}